pipeline {
    agent {
        
        node {
            label 'ansible-node' 
        }
    }

    stages {
        stage('Build') {
            steps {
                script {
                sh "sudo rm -rf /home/ansadmin/ansi-*"
                git branch: 'main', url: 'https://github.com/jyothiadevops/terraform-ansible.git'
                sh 'sudo cp -r ${WORKSPACE} /home/ansadmin/'
                sh 'sudo chown -R ansadmin:ansadmin /home/ansadmin/ansi-*/'
                def directoryPath = '/home/ansadmin/ansi-*/'
                def newOwnerGroup = 'ansadmin:ansadmin'
                sh "sudo chown -R ${newOwnerGroup} ${directoryPath}"
                sh 'sudo chmod 600 /home/ansadmin/ansi-*/inventory'
                sh 'sudo chmod 400 /home/ansadmin/ansi-*/jenkins.pem'
                //sh 'sudo cd /home/ansadmin/ansi-*'
                sh 'sudo sleep 5'
                sh 'sudo ls -lrt'
            }
            }
        }
        stage ('Terraform init') {
            steps {
            sh 'terraform init'
            sh 'terraform plan'
            }
        }
        stage('Terraform Approval') {
        steps {
          script {
            def userInput = input(id: 'confirm', message: 'Apply Terraform?', parameters: [ [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'Apply terraform', name: 'confirm'] ])
          }
        }
      }
      stage ('Apply') {
          steps {
              sh 'terraform apply --auto-approve'
          }
      }
        stage('Ansible Approval') {
        steps {
          script {
            def userInput = input(id: 'confirm', message: 'Apply Ansible ?', parameters: [ [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'Apply terraform', name: 'confirm'] ])
          }
        }
      }
      stage ('Ansible playbooks') {
          steps {
              sh 'ansible-playbook -i inventory *.yml'
          }
      }
        // Additional stages if needed
    }

    post {
        success {
            // Actions to take on successful completion of the job
            echo 'job successful'
        }
        failure {
            // Actions to take if the job 
            echo 'job failed'
        }
    }
}
